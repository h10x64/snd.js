/**
 * snd.js - The Sound Library for JavaScript with WebAudioAPI - v.1.0 beta
 * 
 * The MIT License (MIT)
 * copyright (c) 2014 N_H <h.10x64@gmail.com>
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 **/
snd.invalid={varsion:0,isBeta:!0},snd.invalid.CLASS_DEF=[],snd.PLUGIN_INIT.push(function(){snd.invalid.init=function(){var a=new MutationObserver(snd.invalid.bodyCallback);a.observe(document.body,{childList:!0,subTree:!0});for(var b=snd.invalid.SETUP_FUNCTIONS,c=Object.keys(b),d=0;d<c.length;d++){var e=c[d];if("function"==typeof b[e])for(var f=document.getElementsByTagName(e),g=0;g<f.length;g++){var h=f[g];b[e](h)}}},snd.invalid.bodyCallback=function(a){for(var b=snd.invalid.SETUP_FUNCTIONS,c=0;c<a.length;c++)if(a[c].addedNodes)for(var d=0;d<a[c].addedNodes.length;d++){var e=a[c].addedNodes[d];"function"==typeof b[e.tagName]&&b[e.tagName](e)}},snd.invalid.SETUP_FUNCTIONS={};for(var a=0;a<snd.invalid.CLASS_DEF.length;a++)snd.invalid.CLASS_DEF[a]()}),snd.invalid.CLASS_DEF.push(function(){snd.invalid.Element=function(a){var b=this;this._parent=a,this._observer=new MutationObserver(function(a){for(var c=0;c<a.length;c++)if(a[c].attributeName){var d=a[c].attributeName;if("style"==d){var e=Object.keys(b._parent.style),f={};if(b._lastStyle)for(var g=0;g<e.length;g++)(!b._lastStyle[e[g]]||b._lastStyle[e[g]]&&b._lastStyle[e[g]]!=b._parent.style[e[g]])&&(f[e[g]]=b._parent.style[e[g]]);else f=b._parent.style;b.changeStyle(f),b._lastStyle=b._parent.style}else"connectto"==d?b.connectTo(b._parent.attributes.connectto):b.changeAttribute(a[c].attributeName)}}),this._obj=null,this._lastAttribute={},this._lastStyle={},this._observer.observe(a,{attributes:!0,childList:!0})},snd.invalid.Element.prototype.changeAttribute=function(){},snd.invalid.Element.prototype.changeStyle=function(){},snd.invalid.Element.prototype.nodeRemoved=function(){},snd.invalid.Element.prototype.nodeAdded=function(){},snd.invalid.Element.prototype.connectTo=function(){},snd.invalid.Element.setup=function(a){var b=new snd.invalid.Element(a);a._invalid=b}});