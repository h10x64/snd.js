/**
 * snd.js - The Sound Library for JavaScript with WebAudioAPI - v.0.9
 * 
 * The MIT License (MIT)
 * copyright (c) 2014 N_H <h.10x64@gmail.com>
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 **/
snd.CLASS_DEF.push(function(){snd.Convolver=function(){snd.AudioUnit.apply(this,arguments),this._connector=snd.AUDIO_CONTEXT.createGain(),this._output=snd.AUDIO_CONTEXT.createGain(),this._convolver=snd.AUDIO_CONTEXT.createConvolver(),this._status.audioBuffer=this._convolver.buffer,this._connector.connect(this._convolver),this._convolver.connect(this._output),this._key="",Object.defineProperties(this,{channelCount:{get:function(){return this._status.channelCount},set:function(a){this._output.channelCount=a,this._connector.channelCount=a,this._convolver.channelCount=a,this._status.channelCount=a}},channelCountMode:{get:function(){return this._status.channelCountMode},set:function(a){this._output.channelCountMode=a,this._conector.channelCountMode=a,this._convolver.channelCountMode=a,this._status.channelCountMode=a}},channelInterpretation:{get:function(){return this._status.channelInterpretation},set:function(a){this._output.channelInterpretation=a,this._connector.channelInterpretation=a,this._convolver.channelInterpretation=a,this._status.channelInterpretation=a}},buffer:{get:function(){return this._convolver.buffer},set:function(a){this._convolver.buffer=a}},normalize:{get:function(){return this._convolver.normalize},set:function(a){this._convolver.normalize=a,this.buffer=this.buffer}}}),this.channelCount=this._status.channelCount},snd.Convolver.prototype=Object.create(snd.AudioUnit.prototype),snd.Convolver.prototype.constructor=snd.Gain,snd.Convolver.prototype.connect=function(a,b,c){snd.AudioUnit.prototype.connect.apply(this,arguments),null!=a.getConnector?this._output.connect(a.getConnector(),b,c):this._output.connect(a,b,c)},snd.Convolver.prototype.disconnect=function(a,b){snd.AudioUnit.prototype.disconnect.apply(this,arguments),null!=a.getConnector?this._output.disconnect(a.getConnector(),b):this._output.disconnect(a,b)},snd.Convolver.prototype.createStatus=function(){return new snd.Convolver.Status},snd.Convolver.prototype.getConnector=function(){return this._connector},snd.Convolver.prototype.loadURL=function(a){var b=this;this._status.src=a,this._key=snd.util.getNewKey(a),snd.AUDIO_DATA_MANAGER.add(this._key,a),snd.AUDIO_DATA_MANAGER.addOnLoadListener(this._key,function(){b.buffer=snd.AUDIO_DATA_MANAGER.getAudioBuffer(b._key)}),snd.AUDIO_DATA_MANAGER.load(this._key)},snd.Convolver.prototype.loadBase64=function(a){var b=this;this._status.src=null!=snd.util.REGEX_DATA_URI_SCHEME.exec(a)?a:"data:audio/unknown;base64,"+a,this._key=snd.util.getNewKey(this.id),snd.AUDIO_DATA_MANAGER.addBase64(this._key,a),snd.AUDIO_DATA_MANAGER.addOnLoadListener(this._key,function(){b.buffer=snd.AUDIO_DATA_MANAGER.getAudioBuffer(b._key)}),snd.AUDIO_DATA_MANAGER.load(this._key)},snd.Convolver.prototype.loadAudioBuffer=function(a){this._key=a,this.buffer=snd.AUDIO_DATA_MANAGER.getAudioBuffer(a),this._status.src="key:"+a},snd.Convolver.prototype.loadData=function(a){snd.AudioUnit.prototype.loadData.apply(this,arguments),this._status.src=a.src,snd.util.isAudioManagerKey(this._status.src)?this.loadAudioBuffer(snd.util.stripAudioManagerKey(this._status.src)):snd.util.isDataURI(this._status.src)?this.loadBase64(this._status.src):this.loadURL(this._status.src),this._status.normalize=a.normalize},snd.Convolver.Status=function(){snd.AudioUnit.Status.apply(this,arguments),this.src="",this.normalize=!0},snd.Convolver.Status.prototype=Object.create(snd.AudioUnit.Status.prototype),snd.Convolver.Status.prototype.constructor=snd.Convolver.Status});